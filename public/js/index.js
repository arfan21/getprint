var app = angular.module('myApp',[]);
app.controller("appCtrl", ['$scope','$http','$window', function($scope,$http,$window){
    $http({
        method: "GET",
        url: "/api/mitra",
    }).then(function successCallback(response){
        $scope.data = response.data.mitra
    });
    $http({
        method: "GET",
        url : "/api/mitra?sort=date",
    }).then(function successCallback(response){
        $scope.databydate = response.data.mitra
    });
    $http({
        method: "GET",
        url : "/api/mitra?sort=rating",
    }).then(function successCallback(response){
        $scope.databyrating = response.data.mitra
    });
    
}]);

$(window).on('load', function(){
  setTimeout(removeLoader, 2000); //wait for page load PLUS two seconds.
});

function removeLoader(){
    $( "#loadingDiv" ).fadeOut(500, function() {
      // fadeOut complete. Remove the loading div
      $( "#loadingDiv" ).remove(); //makes page more lightweight 
  });  
}

window.onload = function() {
    const useNodeJS = true;   // if you are not using a node server, set this value to false
    const defaultLiffId = "";   // change the default LIFF value if you are not using a node server

    // DO NOT CHANGE THIS
    let myLiffId = "";

    // if node is used, fetch the environment variable and pass it to the LIFF method
    // otherwise, pass defaultLiffId
    if (useNodeJS) {
        fetch('/send-id')
            .then(function(reqResponse) {
                return reqResponse.json();
            })
            .then(function(jsonResponse) {
                myLiffId = jsonResponse.id;
                initializeLiffOrDie(myLiffId);
            })
            .catch(function(error) {
                console.log("LIFF GAGAL / Belum login line")
            });
    } else {
        myLiffId = defaultLiffId;
        initializeLiffOrDie(myLiffId);
    }
};

/**
* Check if myLiffId is null. If null do not initiate liff.
* @param {string} myLiffId The LIFF ID of the selected element
*/
function initializeLiffOrDie(myLiffId) {
    if (!myLiffId) {
        console.log("LIFF GAGAL / Belum login line")
    } else {
        initializeLiff(myLiffId);
    }
}

/**
* Initialize LIFF
* @param {string} myLiffId The LIFF ID of the selected element
*/
function initializeLiff(myLiffId) {
    liff
        .init({
            liffId: myLiffId
        })
        .then(() => {
            // start to use LIFF's api
            initializeApp();
        })
        .catch((err) => {
            console.log("LIFF GAGAL / Belum login line")
        });
}

/**
 * Initialize the app by calling functions handling individual app components
 */
function initializeApp() {
    displayLiffData();

    // check if the user is logged in/out, and disable inappropriate button
    if (liff.isLoggedIn()) {
        document.getElementById('liffLoginButton').disabled = true;
    } else {
        document.getElementById('liffLogoutButton').disabled = true;
    }
}

/**
* Display data generated by invoking LIFF methods
*/


function displayLiffData() {
    
    liff.getProfile().then(function(profile) {

        $('#header-container-title').html(`
            <h1>Hi, <span class="font-weight-bold" id="displayNameField">`+profile.displayName+`</span></h1><br>
        `)  
        var classlink = document.getElementsByClassName("link");

        Array.prototype.forEach.call(classlink, function(el){
            var link = el.href
            el.href = link + "&useridline="+profile.userId;
        });
        
        if(profile.userId == "U806e7bec3288e9572243e079aa7b6b16"){

            $('#header-container-title').append(`
                <a href="addmitra.html"  style="text-decoration:none;color:black;margin-left:20%">Add New Mitra</a>
            `)  
        }
    })
    
    document.getElementById('browserLanguage').textContent = liff.getLanguage();
    document.getElementById('sdkVersion').textContent = liff.getVersion();
    document.getElementById('isInClient').textContent = liff.isInClient();
    document.getElementById('isLoggedIn').textContent = liff.isLoggedIn();
    document.getElementById('deviceOS').textContent = liff.getOS();
}
